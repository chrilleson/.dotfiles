- defaults:
    link:
      relink: true
      create: true
      force: true
    shell:
      stdout: true
      stderr: true

- clean:
    ~/:
      force: true
    ~/AppData/Roaming/nushell:
      force: true

- link:
    # Nushell
    ~/AppData/Roaming/nushell/config.nu: nushell/config.nu
    ~/AppData/Roaming/nushell/env.nu: nushell/env.nu
    
    # WezTerm (from submodule)
    ~/.wezterm.lua: wezterm/wezterm.lua
    
    # Git
    ~/.gitconfig: git/gitconfig
    ~/.gitignore_global: git/gitignore_global

    # VS Code
    ~/AppData/Roaming/Code/User/settings.json: vscode/settings.json
    ~/AppData/Roaming/Code/User/keybindings.json: vscode/keybindings.json

    # Node/TypeScript
    ~/.npmrc: node/.npmrc
    ~/AppData/Local/pnpm/config: node/.pnpmrc
    ~/.eslintrc.json: node/eslintrc.json
    ~/.prettierrc: node/.prettierrc
    
    # Starship prompt
    ~/.config/starship.toml: starship/starship.toml
    
- create:
    - ~/AppData/Roaming/nushell
    - ~/.config
    - ~/AppData/Local/pnpm/config

- shell:
  - description: Installing Scoop packages
    command: pwsh -NoProfile -ExecutionPolicy Bypass -Command "$OriginalLocation = Get-Location; try { Set-Location $env:USERPROFILE; if (!(Get-Command scoop -ErrorAction SilentlyContinue)) { Write-Host 'Scoop not installed. Install from https://scoop.sh' -ForegroundColor Red; exit 1 }; Write-Host 'Adding Scoop buckets...' -ForegroundColor Cyan; scoop bucket add extras 2>$null; scoop bucket add nerd-fonts 2>$null; Write-Host 'Installing main bucket packages...' -ForegroundColor Cyan; scoop install git delta fzf zoxide bat ripgrep fd jq starship fnm nu; Write-Host 'Installing extras bucket packages...' -ForegroundColor Cyan; scoop install wezterm; Write-Host 'Installing nerd-fonts bucket packages...' -ForegroundColor Cyan; scoop install JetBrainsMono-NF; Write-Host 'Scoop installation complete' -ForegroundColor Green } finally { Set-Location $OriginalLocation }"

  - description: Setting up fnm and Node.js
    command: pwsh -NoProfile -ExecutionPolicy Bypass -File ".\scripts\setup-fnm.ps1"

  - description: Setting up Git
    command: git config --global core.excludesfile ~/.gitignore_global

    # - description: Installing Scoop packages
    #   command: |
    #     powershell
    #       -NoProfile
    #       -ExecutionPolicy Bypass
    #       -Command "
    #         if (!(Get-Command scoop -ErrorAction SilentlyContinue)) {
    #           Write-Host 'Scoop not installed. Install from https://scoop.sh'
    #           exit 1
    #         } else {
    #           scoop bucket add extras 2>$null
    #           scoop bucket add nerd-fonts 2>$null
    #           scoop install git delta fzf zoxide bat ripgrep fd jq starship wezterm nushell JetBrainsMono-NF fnm
    #           Write-Host 'Scoop packages installed. Verifying fnm...'
    #           if (Test-Path '$env:USERPROFILE\scoop\apps\fnm') {
    #             Write-Host 'fnm installed successfully at: $env:USERPROFILE\scoop\apps\fnm'
    #           } else {
    #             Write-Host 'WARNING: fnm installation path not found'
    #           }
    #         }"

    # - description: Installing Node.js LTS via fnm
    #   command: |
    #     powershell
    #       -NoProfile
    #       -ExecutionPolicy Bypass
    #       -Command "
    #         # Add Scoop shims to current session PATH
    #         $scoopShims = Join-Path $env:USERPROFILE 'scoop\shims'
    #         $env:Path = $scoopShims + ';' + $env:Path
            
    #         Write-Host 'Looking for fnm...'
    #         $fnmPath = Get-Command fnm -ErrorAction SilentlyContinue
    #         if ($fnmPath) {
    #           Write-Host 'fnm found at:' $fnmPath.Source
    #           fnm install --lts
    #           fnm use lts-latest
    #           fnm default lts-latest
    #         } else {
    #           Write-Host 'ERROR: fnm not found in PATH'
    #           Write-Host 'Current PATH:'
    #           $env:Path -split ';' | ForEach-Object { Write-Host '  -' $_ }
    #           exit 1
    #         }
    #       "

    # - description: Installing global Node packages
    #   command: |
    #     powershell
    #       -NoProfile
    #       -ExecutionPolicy Bypass
    #       -Command "
    #         # Add Scoop shims to current session PATH
    #         $scoopShims = Join-Path $env:USERPROFILE 'scoop\shims'
    #         $env:Path = $scoopShims + ';' + $env:Path
            
    #         # Load fnm environment
    #         if (Get-Command fnm -ErrorAction SilentlyContinue) {
    #           fnm env --shell power-shell | Out-String | Invoke-Expression
    #         }
            
    #         if (Get-Command npm -ErrorAction SilentlyContinue) {
    #           npm install -g typescript ts-node pnpm yarn eslint prettier @fsouza/prettierd
    #         } else {
    #           Write-Host 'ERROR: npm not found. Ensure Node.js is installed via fnm first.'
    #           exit 1
    #         }
    #       "

    # - description: Setting up Git
    #   command: git config --global core.excludesfile ~/.gitignore_global